{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mido2\\\\Downloads\\\\AiThor\\\\frontend\\\\src\\\\pages\\\\CompanyChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { publicCompanyService, companyService } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyChat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [companyApiKey, setCompanyApiKey] = useState(\"\");\n  useEffect(() => {\n    const fetchCompany = async () => {\n      try {\n        const companyData = await companyService.getCompany();\n        setCompanyApiKey(companyData.company.apiKey);\n      } catch (err) {\n        console.error(\"Error fetching company:\", err);\n      }\n    };\n    fetchCompany();\n  }, []);\n  const sendMessage = async () => {\n    if (!input.trim() || !companyApiKey) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    const prompt = input.trim();\n    setInput(\"\");\n    try {\n      const reply = await publicCompanyService.sendAiMessage(companyApiKey, prompt);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: reply\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error contacting AI\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        height: 400,\n        overflowY: \"auto\",\n        marginBottom: 10\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: msg.sender === \"user\" ? \"blue\" : \"green\",\n          marginBottom: 5\n        },\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message\",\n      style: {\n        width: \"80%\",\n        padding: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"8px 12px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyChat, \"oMPWXPDZmq04Ppif70dJ8fO01SE=\");\n_c = CompanyChat;\nexport default CompanyChat;\nvar _c;\n$RefreshReg$(_c, \"CompanyChat\");","map":{"version":3,"names":["React","useState","useEffect","publicCompanyService","companyService","jsxDEV","_jsxDEV","CompanyChat","_s","messages","setMessages","input","setInput","companyApiKey","setCompanyApiKey","fetchCompany","companyData","getCompany","company","apiKey","err","console","error","sendMessage","trim","prev","sender","text","prompt","reply","sendAiMessage","handleKeyPress","e","key","style","maxWidth","margin","children","border","padding","height","overflowY","marginBottom","map","msg","idx","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/pages/CompanyChat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { publicCompanyService, companyService } from \"../services/api\";\r\n\r\nconst CompanyChat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [companyApiKey, setCompanyApiKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCompany = async () => {\r\n      try {\r\n        const companyData = await companyService.getCompany();\r\n        setCompanyApiKey(companyData.company.apiKey);\r\n      } catch (err) {\r\n        console.error(\"Error fetching company:\", err);\r\n      }\r\n    };\r\n    fetchCompany();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() || !companyApiKey) return;\r\n    setMessages(prev => [...prev, { sender: \"user\", text: input }]);\r\n    const prompt = input.trim();\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const reply = await publicCompanyService.sendAiMessage(companyApiKey, prompt);\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: reply }]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"Error contacting AI\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => { if (e.key === \"Enter\") sendMessage(); };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\r\n      <div style={{ border: \"1px solid #ccc\", padding: 10, height: 400, overflowY: \"auto\", marginBottom: 10 }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{ color: msg.sender === \"user\" ? \"blue\" : \"green\", marginBottom: 5 }}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Type a message\"\r\n        style={{ width: \"80%\", padding: 8 }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"8px 12px\" }}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}