{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// إدخال التوكن في كل طلب\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// التعامل مع أخطاء الاستجابة\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// خدمات المصادقة\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async (name, email, password) => {\n    const response = await api.post('/auth/register', {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  }\n};\n\n// خدمات الشركة\nexport const companyService = {\n  getCompany: async () => {\n    const response = await api.get('/company');\n    return response.data;\n  },\n  updateCompany: async companyData => {\n    const response = await api.post('/company', companyData);\n    return response.data;\n  },\n  getRequests: async () => {\n    const response = await api.get('/company/requests');\n    return response.data;\n  },\n  deleteRequest: async index => {\n    const response = await api.delete(`/company/requests/${index}`);\n    return response.data;\n  },\n  submitExternalRequest: async (apiKey, customerName, product, message) => {\n    const response = await api.post('/company/external-request', {\n      apiKey,\n      customerName,\n      product,\n      message\n    });\n    return response.data;\n  },\n  // 🔹 جلب مفتاح مؤقت (لصفحة AI)\n  getTempKey: async companyId => {\n    try {\n      const res = await api.get(`/public/temp-key/${companyId}`);\n      if (res.data.success) return res.data.tempKey;\n      throw new Error(res.data.error || \"Failed to get temp key\");\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error(\"Temp key fetch error:\", (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status, ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      throw err;\n    }\n  }\n};\n\n// خدمات المشاريع\nexport const projectService = {\n  getProjects: async () => {\n    const response = await api.get('/projects');\n    return response.data;\n  },\n  createProject: async projectData => {\n    const response = await api.post('/projects', projectData);\n    return response.data;\n  },\n  updateProject: async (id, projectData) => {\n    const response = await api.put(`/projects/${id}`, projectData);\n    return response.data;\n  },\n  deleteProject: async id => {\n    const response = await api.delete(`/projects/${id}`);\n    return response.data;\n  }\n};\n\n// خدمات الدردشة\nexport const chatService = {\n  sendMessage: async (message, companyId) => {\n    // استخدام companyId كـ API Key\n    const response = await api.post(`/chat/ai`, {\n      prompt: message,\n      companyApiKey: companyId\n    });\n    return response.data.reply || 'لم يتم تلقي رد';\n  },\n  getChatHistory: async companyId => {\n    const response = await api.get(`/chat/${companyId}`);\n    return response.data.messages || [];\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","email","password","post","data","register","name","companyService","getCompany","get","updateCompany","companyData","getRequests","deleteRequest","index","delete","submitExternalRequest","apiKey","customerName","product","message","getTempKey","companyId","res","success","tempKey","Error","err","_err$response","_err$response2","console","projectService","getProjects","createProject","projectData","updateProject","id","put","deleteProject","chatService","sendMessage","prompt","companyApiKey","reply","getChatHistory","messages"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// إدخال التوكن في كل طلب\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// التعامل مع أخطاء الاستجابة\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// خدمات المصادقة\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (name, email, password) => {\r\n    const response = await api.post('/auth/register', { name, email, password });\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// خدمات الشركة\r\nexport const companyService = {\r\n  getCompany: async () => {\r\n    const response = await api.get('/company');\r\n    return response.data;\r\n  },\r\n\r\n  updateCompany: async (companyData) => {\r\n    const response = await api.post('/company', companyData);\r\n    return response.data;\r\n  },\r\n\r\n  getRequests: async () => {\r\n    const response = await api.get('/company/requests');\r\n    return response.data;\r\n  },\r\n\r\n  deleteRequest: async (index) => {\r\n    const response = await api.delete(`/company/requests/${index}`);\r\n    return response.data;\r\n  },\r\n\r\n  submitExternalRequest: async (apiKey, customerName, product, message) => {\r\n    const response = await api.post('/company/external-request', {\r\n      apiKey,\r\n      customerName,\r\n      product,\r\n      message,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // 🔹 جلب مفتاح مؤقت (لصفحة AI)\r\n  getTempKey: async (companyId) => {\r\n    try {\r\n      const res = await api.get(`/public/temp-key/${companyId}`);\r\n      if (res.data.success) return res.data.tempKey;\r\n      throw new Error(res.data.error || \"Failed to get temp key\");\r\n    } catch (err) {\r\n      console.error(\"Temp key fetch error:\", err.response?.status, err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  },\r\n};\r\n\r\n// خدمات المشاريع\r\nexport const projectService = {\r\n  getProjects: async () => {\r\n    const response = await api.get('/projects');\r\n    return response.data;\r\n  },\r\n\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects', projectData);\r\n    return response.data;\r\n  },\r\n\r\n  updateProject: async (id, projectData) => {\r\n    const response = await api.put(`/projects/${id}`, projectData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteProject: async (id) => {\r\n    const response = await api.delete(`/projects/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// خدمات الدردشة\r\nexport const chatService = {\r\n  sendMessage: async (message, companyId) => {\r\n    // استخدام companyId كـ API Key\r\n    const response = await api.post(`/chat/ai`, { prompt: message, companyApiKey: companyId });\r\n    return response.data.reply || 'لم يتم تلقي رد';\r\n  },\r\n\r\n  getChatHistory: async (companyId) => {\r\n    const response = await api.get(`/chat/${companyId}`);\r\n    return response.data.messages || [];\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}