{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mido2\\\\Downloads\\\\AiThor\\\\frontend\\\\src\\\\pages\\\\CompanyChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyChat = ({\n  type = 'company'\n}) => {\n  _s();\n  // type: 'company' أو 'project'\n  const {\n    companyId,\n    projectId\n  } = useParams();\n  const id = type === 'company' ? companyId : projectId;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [tempKey, setTempKey] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Fetch temporary key (فقط للشركة)\n  useEffect(() => {\n    if (type !== 'company' || !id) return;\n    async function fetchTempKey() {\n      try {\n        const res = await fetch(`http://localhost:5000/api/public/temp-key/${id}`);\n        if (!res.ok) throw new Error(`Server responded with ${res.status}`);\n        const data = await res.json();\n        if (data.success) setTempKey(data.tempKey);else console.error('Temp key not generated:', data.error);\n      } catch (err) {\n        console.error('Failed to fetch temp key:', err.message);\n      }\n    }\n    fetchTempKey();\n  }, [id, type]);\n\n  // Fetch chat messages\n  useEffect(() => {\n    if (!id) return;\n    async function fetchMessages() {\n      try {\n        const endpoint = type === 'company' ? `http://localhost:5000/api/public/chat/${id}` : `http://localhost:5000/api/chat/${id}`;\n        const res = await fetch(endpoint);\n        if (!res.ok) throw new Error(`Server responded with ${res.status}`);\n        const data = await res.json();\n        if (data.success) setMessages(data.messages || []);else console.error('Failed to fetch messages:', data.error);\n      } catch (err) {\n        console.error('Failed to fetch messages:', err.message);\n      }\n    }\n    fetchMessages();\n  }, [id, type]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    if (type === 'company' && !tempKey) return;\n    setMessages(prev => [...prev, {\n      from: 'user',\n      text: input\n    }]);\n    const msg = input;\n    setInput('');\n    try {\n      const endpoint = type === 'company' ? `http://localhost:5000/api/public/chat/ai` : `http://localhost:5000/api/chat`;\n      const body = type === 'company' ? {\n        companyApiKey: tempKey,\n        prompt: msg\n      } : {\n        message: msg,\n        projectId: id\n      };\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (!res.ok) throw new Error(`Server responded with ${res.status}`);\n      const data = await res.json();\n      const reply = type === 'company' ? data.reply || 'No reply' : data.message || 'No reply';\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: reply\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: 'Error contacting API'\n      }]);\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: '#0b1117',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '40px',\n      color: '#e6eef8'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '20px',\n        color: '#ff77c6',\n        top: '90px'\n      },\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '500px',\n        background: 'rgba(15,20,28,0.8)',\n        borderRadius: '18px',\n        padding: '20px',\n        boxShadow: '0 10px 30px rgba(0,0,0,0.2)',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          maxHeight: '400px'\n        },\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px',\n            borderRadius: '12px',\n            background: msg.from === 'user' ? 'rgba(100,100,255,0.2)' : 'rgba(255,100,100,0.2)',\n            marginBottom: '6px'\n          },\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\",\n          style: {\n            flex: 1,\n            padding: '10px',\n            borderRadius: '12px',\n            border: 'none'\n          },\n          onKeyPress: e => {\n            if (e.key === 'Enter') sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: {\n            padding: '10px 20px',\n            borderRadius: '12px',\n            border: 'none',\n            background: '#667eea',\n            color: '#fff',\n            cursor: 'pointer'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyChat, \"MzyJH3B1xgEINOKbs6WdvwQHARA=\", false, function () {\n  return [useParams];\n});\n_c = CompanyChat;\nexport default CompanyChat;\nvar _c;\n$RefreshReg$(_c, \"CompanyChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","jsxDEV","_jsxDEV","CompanyChat","type","_s","companyId","projectId","id","messages","setMessages","input","setInput","tempKey","setTempKey","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchTempKey","res","fetch","ok","Error","status","data","json","success","console","error","err","message","fetchMessages","endpoint","sendMessage","trim","prev","from","text","msg","body","companyApiKey","prompt","method","headers","JSON","stringify","reply","style","minHeight","background","display","flexDirection","alignItems","padding","color","children","marginBottom","top","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","borderRadius","boxShadow","gap","flex","overflowY","maxHeight","map","i","ref","value","onChange","e","target","placeholder","border","onKeyPress","key","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/pages/CompanyChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CompanyChat = ({ type = 'company' }) => {\r\n  // type: 'company' أو 'project'\r\n  const { companyId, projectId } = useParams();\r\n  const id = type === 'company' ? companyId : projectId;\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [tempKey, setTempKey] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Fetch temporary key (فقط للشركة)\r\n  useEffect(() => {\r\n    if (type !== 'company' || !id) return;\r\n\r\n    async function fetchTempKey() {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/public/temp-key/${id}`);\r\n        if (!res.ok) throw new Error(`Server responded with ${res.status}`);\r\n        const data = await res.json();\r\n        if (data.success) setTempKey(data.tempKey);\r\n        else console.error('Temp key not generated:', data.error);\r\n      } catch (err) {\r\n        console.error('Failed to fetch temp key:', err.message);\r\n      }\r\n    }\r\n    fetchTempKey();\r\n  }, [id, type]);\r\n\r\n  // Fetch chat messages\r\n  useEffect(() => {\r\n    if (!id) return;\r\n\r\n    async function fetchMessages() {\r\n      try {\r\n        const endpoint =\r\n          type === 'company'\r\n            ? `http://localhost:5000/api/public/chat/${id}`\r\n            : `http://localhost:5000/api/chat/${id}`;\r\n\r\n        const res = await fetch(endpoint);\r\n        if (!res.ok) throw new Error(`Server responded with ${res.status}`);\r\n        const data = await res.json();\r\n        if (data.success) setMessages(data.messages || []);\r\n        else console.error('Failed to fetch messages:', data.error);\r\n      } catch (err) {\r\n        console.error('Failed to fetch messages:', err.message);\r\n      }\r\n    }\r\n\r\n    fetchMessages();\r\n  }, [id, type]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    if (type === 'company' && !tempKey) return;\r\n\r\n    setMessages((prev) => [...prev, { from: 'user', text: input }]);\r\n    const msg = input;\r\n    setInput('');\r\n\r\n    try {\r\n      const endpoint =\r\n        type === 'company'\r\n          ? `http://localhost:5000/api/public/chat/ai`\r\n          : `http://localhost:5000/api/chat`;\r\n\r\n      const body =\r\n        type === 'company'\r\n          ? { companyApiKey: tempKey, prompt: msg }\r\n          : { message: msg, projectId: id };\r\n\r\n      const res = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(`Server responded with ${res.status}`);\r\n      const data = await res.json();\r\n      const reply =\r\n        type === 'company' ? data.reply || 'No reply' : data.message || 'No reply';\r\n\r\n      setMessages((prev) => [...prev, { from: 'bot', text: reply }]);\r\n    } catch (err) {\r\n      setMessages((prev) => [...prev, { from: 'bot', text: 'Error contacting API' }]);\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: '100vh',\r\n        background: '#0b1117',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '40px',\r\n        color: '#e6eef8',\r\n      }}\r\n    >\r\n      <h1 style={{ marginBottom: '20px', color: '#ff77c6', top: '90px' }}>Chat</h1>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          maxWidth: '500px',\r\n          background: 'rgba(15,20,28,0.8)',\r\n          borderRadius: '18px',\r\n          padding: '20px',\r\n          boxShadow: '0 10px 30px rgba(0,0,0,0.2)',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '10px',\r\n        }}\r\n      >\r\n        <div style={{ flex: 1, overflowY: 'auto', maxHeight: '400px' }}>\r\n          {messages.map((msg, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                padding: '10px',\r\n                borderRadius: '12px',\r\n                background:\r\n                  msg.from === 'user' ? 'rgba(100,100,255,0.2)' : 'rgba(255,100,100,0.2)',\r\n                marginBottom: '6px',\r\n              }}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            style={{ flex: 1, padding: '10px', borderRadius: '12px', border: 'none' }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') sendMessage();\r\n            }}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            style={{\r\n              padding: '10px 20px',\r\n              borderRadius: '12px',\r\n              border: 'none',\r\n              background: '#667eea',\r\n              color: '#fff',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}