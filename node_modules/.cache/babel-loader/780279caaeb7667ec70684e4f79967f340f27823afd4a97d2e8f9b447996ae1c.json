{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// إدخال التوكن في كل طلب\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// التعامل مع أخطاء الاستجابة\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// خدمات المصادقة\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async (name, email, password) => {\n    const response = await api.post('/auth/register', {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  }\n};\n\n// خدمات الشركة\nexport const companyService = {\n  // 🔹 جلب بيانات الشركة\n  getCompany: async () => {\n    const response = await api.get('/company');\n    return response.data;\n  },\n  // 🔹 إنشاء أو تحديث بيانات الشركة (المسار الصحيح من الـ backend)\n  updateCompany: async companyData => {\n    const response = await api.post('/company', companyData);\n    return response.data;\n  },\n  // 🔹 جلب جميع الطلبات الخاصة بالشركة\n  getRequests: async () => {\n    const response = await api.get('/company/requests');\n    return response.data;\n  },\n  // 🔹 حذف طلب محدد حسب الفهرس\n  deleteRequest: async index => {\n    const response = await api.delete(`/company/requests/${index}`);\n    return response.data;\n  },\n  getTempKey: async companyId => {\n    try {\n      const res = await api.get(`/public/temp-key/${companyId}`);\n      if (res.data.success) return res.data.tempKey;\n      throw new Error(res.data.error || \"Failed to get temp key\");\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error(\"Temp key fetch error:\", (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status, ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      throw err;\n    }\n  },\n  // 🔹 إرسال طلب خارجي (يُستخدم من تطبيقات أو مواقع خارجية بالـ API Key)\n  submitExternalRequest: async (apiKey, customerName, product, message) => {\n    const response = await api.post('/company/external-request', {\n      apiKey,\n      customerName,\n      product,\n      message\n    });\n    return response.data;\n  },\n  // ✅ التعديلات الجديدة\n  getCompanyByApiKey: async apiKey => {\n    try {\n      const res = await api.get(`/public/company/${apiKey}`);\n      if (res.data.success) return res.data.company;\n      throw new Error(res.data.error || \"Failed to fetch company by API key\");\n    } catch (err) {\n      var _err$response3, _err$response4;\n      console.error(\"Fetch company by API key error:\", (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status, ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message);\n      throw err;\n    }\n  },\n  getCompanyById: async companyId => {\n    try {\n      const res = await api.get(`/public/chat/${companyId}`);\n      if (res.data.success) return res.data;\n      throw new Error(res.data.error || \"Failed to fetch company by ID\");\n    } catch (err) {\n      var _err$response5, _err$response6;\n      console.error(\"Fetch company by ID error:\", (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status, ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data) || err.message);\n      throw err;\n    }\n  }\n};\n\n// خدمات المشاريع\nexport const projectService = {\n  getProjects: async () => {\n    const response = await api.get('/projects');\n    return response.data;\n  },\n  createProject: async projectData => {\n    const response = await api.post('/projects', projectData);\n    return response.data;\n  },\n  updateProject: async (id, projectData) => {\n    const response = await api.put(`/projects/${id}`, projectData);\n    return response.data;\n  },\n  deleteProject: async id => {\n    const response = await api.delete(`/projects/${id}`);\n    return response.data;\n  }\n};\n\n// خدمات الدردشة\nexport const chatService = {\n  sendMessage: async (message, apiKey) => {\n    const response = await api.post('/chat', {\n      message,\n      apiKey\n    });\n    return response.data.reply || 'لم يتم تلقي رد';\n  },\n  getChatHistory: async companyId => {\n    const response = await api.get(`/chat/${companyId}`);\n    return response.data;\n  },\n  // ✅ التعديلات الجديدة: الدردشة باستخدام API Key\n  sendMessageWithApiKey: async (message, apiKey) => {\n    try {\n      const res = await api.post('/public/chat', {\n        prompt: message,\n        companyApiKey: apiKey\n      });\n      if (res.data.success) return res.data.reply;\n      throw new Error(res.data.error || \"Failed to send message\");\n    } catch (err) {\n      var _err$response7, _err$response8;\n      console.error(\"Send message with API key error:\", (_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.status, ((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : _err$response8.data) || err.message);\n      throw err;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","email","password","post","data","register","name","companyService","getCompany","get","updateCompany","companyData","getRequests","deleteRequest","index","delete","getTempKey","companyId","res","success","tempKey","Error","err","_err$response","_err$response2","console","message","submitExternalRequest","apiKey","customerName","product","getCompanyByApiKey","company","_err$response3","_err$response4","getCompanyById","_err$response5","_err$response6","projectService","getProjects","createProject","projectData","updateProject","id","put","deleteProject","chatService","sendMessage","reply","getChatHistory","sendMessageWithApiKey","prompt","companyApiKey","_err$response7","_err$response8"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// إدخال التوكن في كل طلب\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// التعامل مع أخطاء الاستجابة\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// خدمات المصادقة\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (name, email, password) => {\r\n    const response = await api.post('/auth/register', { name, email, password });\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// خدمات الشركة\r\nexport const companyService = {\r\n  // 🔹 جلب بيانات الشركة\r\n  getCompany: async () => {\r\n    const response = await api.get('/company');\r\n    return response.data;\r\n  },\r\n\r\n  // 🔹 إنشاء أو تحديث بيانات الشركة (المسار الصحيح من الـ backend)\r\n  updateCompany: async (companyData) => {\r\n    const response = await api.post('/company', companyData);\r\n    return response.data;\r\n  },\r\n\r\n  // 🔹 جلب جميع الطلبات الخاصة بالشركة\r\n  getRequests: async () => {\r\n    const response = await api.get('/company/requests');\r\n    return response.data;\r\n  },\r\n\r\n  // 🔹 حذف طلب محدد حسب الفهرس\r\n  deleteRequest: async (index) => {\r\n    const response = await api.delete(`/company/requests/${index}`);\r\n    return response.data;\r\n  },\r\n\r\n  getTempKey: async (companyId) => {\r\n    try {\r\n      const res = await api.get(`/public/temp-key/${companyId}`);\r\n      if(res.data.success) return res.data.tempKey;\r\n      throw new Error(res.data.error || \"Failed to get temp key\");\r\n    } catch (err) {\r\n      console.error(\"Temp key fetch error:\", err.response?.status, err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  // 🔹 إرسال طلب خارجي (يُستخدم من تطبيقات أو مواقع خارجية بالـ API Key)\r\n  submitExternalRequest: async (apiKey, customerName, product, message) => {\r\n    const response = await api.post('/company/external-request', {\r\n      apiKey,\r\n      customerName,\r\n      product,\r\n      message,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // ✅ التعديلات الجديدة\r\n  getCompanyByApiKey: async (apiKey) => {\r\n    try {\r\n      const res = await api.get(`/public/company/${apiKey}`);\r\n      if (res.data.success) return res.data.company;\r\n      throw new Error(res.data.error || \"Failed to fetch company by API key\");\r\n    } catch (err) {\r\n      console.error(\"Fetch company by API key error:\", err.response?.status, err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  getCompanyById: async (companyId) => {\r\n    try {\r\n      const res = await api.get(`/public/chat/${companyId}`);\r\n      if (res.data.success) return res.data;\r\n      throw new Error(res.data.error || \"Failed to fetch company by ID\");\r\n    } catch (err) {\r\n      console.error(\"Fetch company by ID error:\", err.response?.status, err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  },\r\n};\r\n\r\n// خدمات المشاريع\r\nexport const projectService = {\r\n  getProjects: async () => {\r\n    const response = await api.get('/projects');\r\n    return response.data;\r\n  },\r\n\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects', projectData);\r\n    return response.data;\r\n  },\r\n\r\n  updateProject: async (id, projectData) => {\r\n    const response = await api.put(`/projects/${id}`, projectData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteProject: async (id) => {\r\n    const response = await api.delete(`/projects/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// خدمات الدردشة\r\nexport const chatService = {\r\n  sendMessage: async (message, apiKey) => {\r\n    const response = await api.post('/chat', { message, apiKey });\r\n    return response.data.reply || 'لم يتم تلقي رد';\r\n  },\r\n\r\n  getChatHistory: async (companyId) => {\r\n    const response = await api.get(`/chat/${companyId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // ✅ التعديلات الجديدة: الدردشة باستخدام API Key\r\n  sendMessageWithApiKey: async (message, apiKey) => {\r\n    try {\r\n      const res = await api.post('/public/chat', { prompt: message, companyApiKey: apiKey });\r\n      if (res.data.success) return res.data.reply;\r\n      throw new Error(res.data.error || \"Failed to send message\");\r\n    } catch (err) {\r\n      console.error(\"Send message with API key error:\", err.response?.status, err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}