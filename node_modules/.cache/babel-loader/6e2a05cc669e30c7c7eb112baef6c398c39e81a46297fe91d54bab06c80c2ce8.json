{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mido2\\\\Downloads\\\\AiThor\\\\frontend\\\\src\\\\context\\\\I18nContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst I18nContext = /*#__PURE__*/createContext();\nconst translations = {\n  ar: {\n    home: 'الرئيسية',\n    login: 'تسجيل الدخول',\n    register: 'إنشاء حساب',\n    dashboard: 'لوحة التحكم',\n    startNow: 'ابدأ الآن',\n    language: 'اللغة',\n    theme: 'المظهر',\n    dark: 'داكن',\n    light: 'فاتح'\n  },\n  en: {\n    home: 'Home',\n    login: 'Sign In',\n    register: 'Sign Up',\n    dashboard: 'Dashboard',\n    startNow: 'Get Started',\n    language: 'Language',\n    theme: 'Theme',\n    dark: 'Dark',\n    light: 'Light'\n  }\n};\nexport const useI18n = () => {\n  _s();\n  const ctx = useContext(I18nContext);\n  if (!ctx) throw new Error('useI18n must be used within I18nProvider');\n  return ctx;\n};\n_s(useI18n, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport const I18nProvider = ({\n  children\n}) => {\n  _s2();\n  const [lang, setLang] = useState(() => localStorage.getItem('lang') || 'ar');\n  useEffect(() => {\n    localStorage.setItem('lang', lang);\n    document.documentElement.lang = lang;\n    document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';\n  }, [lang]);\n  const t = key => {\n    var _translations$lang;\n    return ((_translations$lang = translations[lang]) === null || _translations$lang === void 0 ? void 0 : _translations$lang[key]) || key;\n  };\n  const switchLang = () => setLang(prev => prev === 'ar' ? 'en' : 'ar');\n  const value = useMemo(() => ({\n    lang,\n    t,\n    setLang,\n    switchLang\n  }), [lang]);\n  return /*#__PURE__*/_jsxDEV(I18nContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s2(I18nProvider, \"dLfaFZvi5QbmqIiz9HEk6pNCiik=\");\n_c = I18nProvider;\nvar _c;\n$RefreshReg$(_c, \"I18nProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsxDEV","_jsxDEV","I18nContext","translations","ar","home","login","register","dashboard","startNow","language","theme","dark","light","en","useI18n","_s","ctx","Error","I18nProvider","children","_s2","lang","setLang","localStorage","getItem","setItem","document","documentElement","dir","t","key","_translations$lang","switchLang","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/context/I18nContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nconst I18nContext = createContext();\r\n\r\nconst translations = {\r\n  ar: {\r\n    home: 'الرئيسية',\r\n    login: 'تسجيل الدخول',\r\n    register: 'إنشاء حساب',\r\n    dashboard: 'لوحة التحكم',\r\n    startNow: 'ابدأ الآن',\r\n    language: 'اللغة',\r\n    theme: 'المظهر',\r\n    dark: 'داكن',\r\n    light: 'فاتح',\r\n  },\r\n  en: {\r\n    home: 'Home',\r\n    login: 'Sign In',\r\n    register: 'Sign Up',\r\n    dashboard: 'Dashboard',\r\n    startNow: 'Get Started',\r\n    language: 'Language',\r\n    theme: 'Theme',\r\n    dark: 'Dark',\r\n    light: 'Light',\r\n  }\r\n};\r\n\r\nexport const useI18n = () => {\r\n  const ctx = useContext(I18nContext);\r\n  if (!ctx) throw new Error('useI18n must be used within I18nProvider');\r\n  return ctx;\r\n};\r\n\r\nexport const I18nProvider = ({ children }) => {\r\n  const [lang, setLang] = useState(() => localStorage.getItem('lang') || 'ar');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('lang', lang);\r\n    document.documentElement.lang = lang;\r\n    document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';\r\n  }, [lang]);\r\n\r\n  const t = (key) => translations[lang]?.[key] || key;\r\n  const switchLang = () => setLang(prev => (prev === 'ar' ? 'en' : 'ar'));\r\n\r\n  const value = useMemo(() => ({ lang, t, setLang, switchLang }), [lang]);\r\n\r\n  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,YAAY,GAAG;EACnBC,EAAE,EAAE;IACFC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,cAAc;IACrBC,QAAQ,EAAE,YAAY;IACtBC,SAAS,EAAE,aAAa;IACxBC,QAAQ,EAAE,WAAW;IACrBC,QAAQ,EAAE,OAAO;IACjBC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,EAAE,EAAE;IACFT,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,SAAS;IACnBC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE,aAAa;IACvBC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,GAAG,GAAGrB,UAAU,CAACM,WAAW,CAAC;EACnC,IAAI,CAACe,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ,CAAC;AAACD,EAAA,CAJWD,OAAO;AAMpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,MAAMyB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;EAE5E5B,SAAS,CAAC,MAAM;IACd2B,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAClCK,QAAQ,CAACC,eAAe,CAACN,IAAI,GAAGA,IAAI;IACpCK,QAAQ,CAACC,eAAe,CAACC,GAAG,GAAGP,IAAI,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK;EAC9D,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMQ,CAAC,GAAIC,GAAG;IAAA,IAAAC,kBAAA;IAAA,OAAK,EAAAA,kBAAA,GAAA7B,YAAY,CAACmB,IAAI,CAAC,cAAAU,kBAAA,uBAAlBA,kBAAA,CAAqBD,GAAG,CAAC,KAAIA,GAAG;EAAA;EACnD,MAAME,UAAU,GAAGA,CAAA,KAAMV,OAAO,CAACW,IAAI,IAAKA,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EAEvE,MAAMC,KAAK,GAAGrC,OAAO,CAAC,OAAO;IAAEwB,IAAI;IAAEQ,CAAC;IAAEP,OAAO;IAAEU;EAAW,CAAC,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEvE,oBAAOrB,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAAEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACnB,GAAA,CAfWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}