{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mido2\\\\Downloads\\\\AiThor\\\\frontend\\\\src\\\\pages\\\\CompanyChat.js\",\n  _s = $RefreshSig$();\n// CompanyChat.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { publicCompanyService } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyChat = () => {\n  _s();\n  const {\n    companyId\n  } = useParams(); // company API key\n  const [company, setCompany] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchCompany();\n  }, [companyId]);\n  const fetchCompany = async () => {\n    try {\n      const companyData = await publicCompanyService.getCompanyByApiKey(companyId);\n      setCompany(companyData);\n    } catch (err) {\n      console.error(\"Fetch company error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: trimmed\n    }]);\n    setInput(\"\");\n    try {\n      const reply = await publicCompanyService.sendAiMessage(companyId, trimmed);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: reply\n      }]);\n    } catch (err) {\n      console.error(\"Send message error:\", err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error contacting AI\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (!company) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Company not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [company.name, \" Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-container\",\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        height: 400,\n        overflowY: \"auto\",\n        marginBottom: 10\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        style: {\n          marginBottom: 5,\n          color: msg.sender === \"user\" ? \"blue\" : \"green\"\n        },\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message\",\n      style: {\n        width: \"80%\",\n        padding: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"8px 12px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyChat, \"voPYGW6rixen3Yy+yFOhvN52+Qk=\", false, function () {\n  return [useParams];\n});\n_c = CompanyChat;\nexport default CompanyChat;\nvar _c;\n$RefreshReg$(_c, \"CompanyChat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","publicCompanyService","jsxDEV","_jsxDEV","CompanyChat","_s","companyId","company","setCompany","messages","setMessages","input","setInput","loading","setLoading","fetchCompany","companyData","getCompanyByApiKey","err","console","error","sendMessage","trimmed","trim","prev","sender","text","reply","sendAiMessage","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","name","id","border","padding","height","overflowY","marginBottom","map","msg","idx","color","type","value","onChange","target","onKeyPress","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/pages/CompanyChat.js"],"sourcesContent":["// CompanyChat.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { publicCompanyService } from \"../services/api\";\r\n\r\nconst CompanyChat = () => {\r\n  const { companyId } = useParams(); // company API key\r\n  const [company, setCompany] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchCompany();\r\n  }, [companyId]);\r\n\r\n  const fetchCompany = async () => {\r\n    try {\r\n      const companyData = await publicCompanyService.getCompanyByApiKey(companyId);\r\n      setCompany(companyData);\r\n    } catch (err) {\r\n      console.error(\"Fetch company error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    const trimmed = input.trim();\r\n    if (!trimmed) return;\r\n\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: trimmed }]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const reply = await publicCompanyService.sendAiMessage(companyId, trimmed);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: reply }]);\r\n    } catch (err) {\r\n      console.error(\"Send message error:\", err);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error contacting AI\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\r\n  if (!company) return <div className=\"text-center mt-10\">Company not found</div>;\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\r\n      <h2 className=\"text-xl font-bold mb-4\">{company.name} Chat</h2>\r\n      <div\r\n        id=\"chat-container\"\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: 10,\r\n          height: 400,\r\n          overflowY: \"auto\",\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`message ${msg.sender}`}\r\n            style={{\r\n              marginBottom: 5,\r\n              color: msg.sender === \"user\" ? \"blue\" : \"green\",\r\n            }}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Type a message\"\r\n        style={{ width: \"80%\", padding: 8 }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"8px 12px\" }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}