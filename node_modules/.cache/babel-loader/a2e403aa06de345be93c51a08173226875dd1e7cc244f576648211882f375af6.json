{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mido2\\\\Downloads\\\\AiThor\\\\frontend\\\\src\\\\pages\\\\CompanyChat.js\",\n  _s = $RefreshSig$();\n// CompanyChat.jsx\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { chatService } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyChat = () => {\n  _s();\n  const {\n    companyId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: trimmed\n    }]);\n    setInput(\"\");\n    try {\n      const response = await chatService.sendMessage(trimmed, companyId);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: response\n      }]);\n    } catch (err) {\n      console.error(err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error contacting AI\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-container\",\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        height: 400,\n        overflowY: \"auto\",\n        marginBottom: 10\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        style: {\n          marginBottom: 5,\n          color: msg.sender === \"user\" ? \"blue\" : \"green\"\n        },\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message\",\n      style: {\n        width: \"80%\",\n        padding: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"8px 12px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyChat, \"GryNgTlkAuaFuerFJ7j6Hrl8eA8=\", false, function () {\n  return [useParams];\n});\n_c = CompanyChat;\nexport default CompanyChat;\nvar _c;\n$RefreshReg$(_c, \"CompanyChat\");","map":{"version":3,"names":["React","useState","useParams","chatService","jsxDEV","_jsxDEV","CompanyChat","_s","companyId","messages","setMessages","input","setInput","sendMessage","trimmed","trim","prev","sender","text","response","err","console","error","handleKeyPress","e","key","style","maxWidth","margin","children","id","border","padding","height","overflowY","marginBottom","map","msg","idx","className","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mido2/Downloads/AiThor/frontend/src/pages/CompanyChat.js"],"sourcesContent":["// CompanyChat.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { chatService } from \"../services/api\";\r\n\r\nconst CompanyChat = () => {\r\n  const { companyId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    const trimmed = input.trim();\r\n    if (!trimmed) return;\r\n\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: trimmed }]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await chatService.sendMessage(trimmed, companyId);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: response }]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error contacting AI\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\r\n      <div\r\n        id=\"chat-container\"\r\n        style={{ border: \"1px solid #ccc\", padding: 10, height: 400, overflowY: \"auto\", marginBottom: 10 }}\r\n      >\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.sender}`} style={{ marginBottom: 5, color: msg.sender === \"user\" ? \"blue\" : \"green\" }}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Type a message\"\r\n        style={{ width: \"80%\", padding: 8 }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"8px 12px\" }}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}